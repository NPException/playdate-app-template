name: Create Release

# Controls when the workflow will run
on:
  # this means it can be triggered manually
  workflow_dispatch:
  # trigger on pushes to main
  push:
    branches:
      - 'main'
      #- 'releases/**' # use this instead of 'main' to only trigger when a release branch is pushed
    # only when something in the src folder changed
    paths:
      - 'src/**'
  # trigger on PRs to main
  pull_request:
    branches:
      - 'main'
    # only when something in the src folder changed
    paths:
      - 'src/**'

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # This workflow contains a single job called "build"
  build:
    # The type of runner that the job will run on
    runs-on: ubuntu-latest

    permissions:
      contents: write

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Setup Babashka
        id: setup-babashka
        uses: turtlequeue/setup-babashka@v1.5.0
        with:
          babashka-version: 1.3.185

      - name: Setup Homebrew
        id: setup-homebrew
        uses: Homebrew/actions/setup-homebrew@master

      - name: Install Fennel
        id: install-fennel
        run: brew install fennel

      - name: Install Playdate SDK
        id: playdate
        uses: pd-rs/get-playdate-sdk@0.3.3
        with:
          version: latest # possible values: version `x.x.x` or `latest` by default

      - name: Build release
        id: build-release
        run: |
          cd $GITHUB_WORKSPACE
          bb build-release
          echo "pdxinfo-path=$(bb pdxinfo-path)" >> $GITHUB_OUTPUT
          echo "name=$(bb release-name)" >> $GITHUB_OUTPUT
          echo "path=$(bb release-path)" >> $GITHUB_OUTPUT
          echo "version=$(bb release-version)" >> $GITHUB_OUTPUT

      - name: Commit pxdinfo changes
        uses: stefanzweifel/git-auto-commit-action@v5
        with:
          commit_message: update `pdxinfo`
          file_pattern: ${{ steps.build-release.outputs.pdxinfo-path }}

      - name: Locate latest commit
        id: latest-commit
        run: |
          echo "sha=$(git rev-parse HEAD)" >> $GITHUB_OUTPUT

      - name: Upload release
        uses: ncipollo/release-action@v1
        with:
          name: ${{ steps.build-release.outputs.name }}
          artifacts: ${{ steps.build-release.outputs.path }}
          commit: ${{ steps.latest-commit.outputs.sha }}
          tag: v${{ steps.build-release.outputs.version }}
          draft: true
          artifactErrorsFailBuild: true
          allowUpdates: true
          updateOnlyUnreleased: true
          generateReleaseNotes: true
          omitBodyDuringUpdate: true
